{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAMI,EAGA,EATE,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAW,SAAS,aAAa,CAAC,SAClC,EAAY,EAAE,CACd,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAY,SAAS,aAAa,CAAC,UAGrC,EAAY,MACZ,EAAiB,GA0JrB,SAAS,EAAO,CAAK,CAAE,CAAO,EAC5B,EAAM,SAAS,CAAG,GAElB,EAAQ,OAAO,CAAC,SAAA,CAAhB,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAE9B,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAuB,OAAO,OAAO,CAAC,EAAA,CAAA,OAAA,QAAA,CAAA,GAAtC,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAiD,CAAjD,I,EAAA,G,EAAA,EAAA,KAAA,C,A,S,C,E,G,M,O,C,G,O,C,E,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,C,G,E,M,G,G,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,EAAA,I,A,W,M,A,U,6I,KAAQ,EAAA,CAAA,CAAA,EAAA,CAAK,EAAb,CAAA,CAAA,EAAA,CACG,EAAS,SAAS,aAAa,CAAC,MAItC,GAFA,EAAO,WAAW,CAAG,EAEjB,AAAQ,WAAR,EAAkB,CACpB,IAAM,EAAS,IAA0B,MAAA,CAAtB,EAAK,cAAc,GAEtC,CAAA,EAAO,WAAW,CAAG,CAC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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"tbody\");\nvar captions = document.querySelector(\"thead\");\nvar employees = [];\nvar form = document.createElement(\"form\");\nvar submitBtn = document.createElement(\"button\");\nvar inputNames = [\n    \"Name\",\n    \"Position\",\n    \"Office\",\n    \"Age\",\n    \"Salary\"\n];\nvar editedCell;\nvar currOrder = \"asc\";\nvar currColumnName = \"\";\nvar activeLine;\nArray.from(table.children).forEach(function(el) {\n    employees.push({\n        Name: el.children[0].textContent,\n        Position: el.children[1].textContent,\n        Office: el.children[2].textContent,\n        Age: el.children[3].textContent,\n        Salary: +el.children[4].textContent.replace(/[,$]/g, \"\")\n    });\n});\ncaptions.addEventListener(\"click\", function(e) {\n    var sortValue = e.target.textContent;\n    employees.sort(function(a, b) {\n        return sortTable(a, b, sortValue);\n    });\n    if (currColumnName === sortValue && currOrder === \"desc\") currOrder = \"asc\";\n    else if (currColumnName === sortValue && currOrder === \"asc\") {\n        currOrder = \"desc\";\n        employees.reverse();\n    }\n    if (currColumnName !== sortValue) {\n        currColumnName = sortValue;\n        currOrder = \"asc\";\n    }\n    render(table, employees);\n});\ntable.addEventListener(\"click\", function(e) {\n    if (activeLine && activeLine !== e.target.parentNode) activeLine.classList.remove(\"active\");\n    activeLine = e.target.parentNode;\n    activeLine.classList.add(\"active\");\n});\nform.classList.add(\"new-employee-form\");\ninputNames.forEach(function(field) {\n    if (field !== \"Office\") {\n        var inputType = field === \"Age\" || field === \"Salary\" ? \"number\" : \"text\";\n        form.insertAdjacentHTML(\"beforeend\", \"<label>\".concat(field, ': <input name=\"').concat(field.toLowerCase(), '\"\\n        type=\"').concat(inputType, '\" data-qa=\"').concat(field.toLowerCase(), '\"\\n        ></label>'));\n    } else {\n        var selectOptions = [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinburgh\",\n            \"San Francisco\"\n        ];\n        var options = selectOptions.map(function(item) {\n            return \"<option name=\".concat(item, \">\").concat(item, \"</option>\");\n        });\n        form.insertAdjacentHTML(\"beforeend\", \"<label>\".concat(field, ': <select name=\"').concat(field.toLowerCase(), '\" type=\"text\"\\n        data-qa=\"').concat(field.toLowerCase(), '\" required\\n        >\\n        ').concat(options, \"\\n        </select></label>\"));\n    }\n});\nsubmitBtn.textContent = \"Save to table\";\nform.append(submitBtn);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var notification = document.createElement(\"div\");\n    var notificationTitle = document.createElement(\"h2\");\n    var notificationBody = document.createElement(\"p\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.className = \"notification\";\n    notification.append(notificationTitle);\n    notification.append(notificationBody);\n    var formData = new FormData(e.target);\n    var data = Object.fromEntries(formData.entries());\n    var isError = validateData(data, notificationBody);\n    if (!isError) {\n        employees.push({\n            Name: data[\"name\"],\n            Position: data[\"position\"],\n            Office: data[\"office\"],\n            Age: +data[\"age\"],\n            Salary: +data[\"salary\"]\n        });\n        notification.classList.add(\"success\");\n        notificationTitle.textContent = \"Success\";\n        notificationBody.textContent = \"Data successfully added\";\n        render(table, employees);\n        e.target.reset();\n    } else {\n        notificationTitle.textContent = \"Error\";\n        notification.classList.add(\"error\");\n    }\n    document.body.append(notification);\n    setTimeout(function() {\n        document.body.removeChild(notification);\n    }, 3000);\n});\ndocument.body.append(form);\ntable.addEventListener(\"dblclick\", function(e) {\n    editedCell = e.target.textContent;\n    var editedCellType = !isNaN(parseInt(editedCell)) || editedCell.search(/[$]/) !== -1 ? \"number\" : \"text\";\n    e.target.innerHTML = '<input class=\"cell-input\"\\n    value=\"'.concat(editedCell.search(/[$]/) === -1 ? editedCell : editedCell.replace(/[,$]/g, \"\"), '\"\\n    type=').concat(editedCellType, \">\");\n    e.target.firstChild.focus();\n});\ndocument.addEventListener(\"blur\", function(e) {\n    applyChanges(e);\n}, true);\ndocument.addEventListener(\"keydown\", function(e) {\n    if (e.key === \"Enter\") applyChanges(e);\n});\nfunction sortTable(a, b, columnName) {\n    var first = a[columnName];\n    var second = b[columnName];\n    if (columnName === \"Name\" || columnName === \"Position\" || columnName === \"Office\") return first.localeCompare(second);\n    return first - second;\n}\nfunction render(board, content) {\n    board.innerHTML = \"\";\n    content.forEach(function(employee) {\n        var row = document.createElement(\"tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = Object.entries(employee)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], data = _step_value[1];\n                var column = document.createElement(\"td\");\n                column.textContent = data;\n                if (key === \"Salary\") {\n                    var salary = \"$\".concat(data.toLocaleString());\n                    column.textContent = salary;\n                }\n                row.append(column);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        board.append(row);\n    });\n}\nfunction validateData(data, text) {\n    if (data[\"name\"].trim().length < 4) {\n        text.textContent = \"Name should contain more than 4 letters. \";\n        return true;\n    }\n    if (data[\"position\"].trim() === \"\") {\n        text.textContent = \"Position is required\";\n        return true;\n    }\n    if (data[\"age\"] < 18 || data[\"age\"] > 90) {\n        text.textContent = \"Age must be between 18 and 90.\";\n        return true;\n    }\n    if (+data[\"salary\"] <= 0 || data[\"salary\"].trim() === \"\") {\n        text.textContent = \"Salary is required\";\n        return true;\n    }\n}\nfunction applyChanges(e) {\n    if (e.target.classList.contains(\"cell-input\")) {\n        var newText = e.target.value.trim();\n        var cell = e.target.parentNode;\n        var shouldBeReplaced = true;\n        var columnName = e.target.getAttribute(\"type\") === \"number\" && cell.parentNode.lastElementChild === cell ? \"salary\" : \"age\";\n        if (columnName === \"age\" && (+newText < 18 || +newText > 90)) shouldBeReplaced = false;\n        if (newText === \"\" || +newText <= 0) shouldBeReplaced = false;\n        if (shouldBeReplaced && columnName === \"salary\") {\n            cell.textContent = \"$\" + (+newText).toLocaleString();\n            return;\n        }\n        if (!shouldBeReplaced) {\n            cell.textContent = editedCell;\n            return;\n        }\n        cell.textContent = newText;\n    }\n}\n\n//# sourceMappingURL=index.d1b9ec3c.js.map\n","'use strict';\n\nconst table = document.querySelector('tbody');\nconst captions = document.querySelector('thead');\nconst employees = [];\nconst form = document.createElement('form');\nconst submitBtn = document.createElement('button');\nconst inputNames = ['Name', 'Position', 'Office', 'Age', 'Salary'];\nlet editedCell;\nlet currOrder = 'asc';\nlet currColumnName = '';\nlet activeLine;\n\nArray.from(table.children).forEach(el => {\n  employees.push({\n    Name: el.children[0].textContent,\n    Position: el.children[1].textContent,\n    Office: el.children[2].textContent,\n    Age: el.children[3].textContent,\n    Salary: +el.children[4].textContent.replace(/[,$]/g, ''),\n  });\n});\n\ncaptions.addEventListener('click', (e) => {\n  const sortValue = e.target.textContent;\n\n  employees.sort((a, b) => sortTable(a, b, sortValue));\n\n  if (currColumnName === sortValue && currOrder === 'desc') {\n    currOrder = 'asc';\n  } else if (currColumnName === sortValue && currOrder === 'asc') {\n    currOrder = 'desc';\n    employees.reverse();\n  }\n\n  if (currColumnName !== sortValue) {\n    currColumnName = sortValue;\n    currOrder = 'asc';\n  }\n\n  render(table, employees);\n});\n\ntable.addEventListener('click', (e) => {\n  if (activeLine && activeLine !== e.target.parentNode) {\n    activeLine.classList.remove('active');\n  }\n\n  activeLine = e.target.parentNode;\n  activeLine.classList.add('active');\n});\n\nform.classList.add('new-employee-form');\n\ninputNames.forEach(field => {\n  if (field !== 'Office') {\n    const inputType = (field === 'Age' || field === 'Salary')\n      ? 'number'\n      : 'text';\n\n    form.insertAdjacentHTML('beforeend',\n      `<label>${field}: <input name=\"${field.toLowerCase()}\"\n        type=\"${inputType}\" data-qa=\"${field.toLowerCase()}\"\n        ></label>`);\n  } else {\n    const selectOptions = ['Tokyo', 'Singapore', 'London',\n      'New York', 'Edinburgh', 'San Francisco'];\n    const options = selectOptions.map(item => (\n      `<option name=${item}>${item}</option>`));\n\n    form.insertAdjacentHTML('beforeend',\n      `<label>${field}: <select name=\"${field.toLowerCase()}\" type=\"text\"\n        data-qa=\"${field.toLowerCase()}\" required\n        >\n        ${options}\n        </select></label>`);\n  }\n});\nsubmitBtn.textContent = 'Save to table';\nform.append(submitBtn);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationBody = document.createElement('p');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = 'notification';\n  notification.append(notificationTitle);\n  notification.append(notificationBody);\n\n  const formData = new FormData(e.target);\n  const data = Object.fromEntries(formData.entries());\n  const isError = validateData(data, notificationBody);\n\n  if (!isError) {\n    employees.push({\n      Name: data['name'],\n      Position: data['position'],\n      Office: data['office'],\n      Age: +data['age'],\n      Salary: +data['salary'],\n    });\n\n    notification.classList.add('success');\n    notificationTitle.textContent = 'Success';\n    notificationBody.textContent = 'Data successfully added';\n\n    render(table, employees);\n    e.target.reset();\n  } else {\n    notificationTitle.textContent = 'Error';\n    notification.classList.add('error');\n  }\n  document.body.append(notification);\n\n  setTimeout(() => {\n    document.body.removeChild(notification);\n  }, 3000);\n});\n\ndocument.body.append(form);\n\ntable.addEventListener('dblclick', (e) => {\n  editedCell = e.target.textContent;\n\n  const editedCellType = (!isNaN(parseInt(editedCell))\n    || editedCell.search(/[$]/) !== -1)\n    ? 'number'\n    : 'text';\n\n  e.target.innerHTML = `<input class=\"cell-input\"\n    value=\"${(editedCell.search(/[$]/) === -1)\n    ? editedCell\n    : editedCell.replace(/[,$]/g, '')}\"\n    type=${editedCellType}>`;\n  e.target.firstChild.focus();\n});\n\ndocument.addEventListener('blur', (e) => {\n  applyChanges(e);\n}, true);\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'Enter') {\n    applyChanges(e);\n  }\n});\n\nfunction sortTable(a, b, columnName) {\n  const first = a[columnName];\n  const second = b[columnName];\n\n  if (columnName === 'Name'\n    || columnName === 'Position'\n    || columnName === 'Office') {\n    return first.localeCompare(second);\n  }\n\n  return first - second;\n}\n\nfunction render(board, content) {\n  board.innerHTML = '';\n\n  content.forEach(employee => {\n    const row = document.createElement('tr');\n\n    for (const [ key, data ] of Object.entries(employee)) {\n      const column = document.createElement('td');\n\n      column.textContent = data;\n\n      if (key === 'Salary') {\n        const salary = `$${data.toLocaleString()}`;\n\n        column.textContent = salary;\n      }\n\n      row.append(column);\n    };\n    board.append(row);\n  });\n}\n\nfunction validateData(data, text) {\n  if (data['name'].trim().length < 4) {\n    text.textContent = 'Name should contain more than 4 letters. ';\n\n    return true;\n  }\n\n  if (data['position'].trim() === '') {\n    text.textContent = 'Position is required';\n\n    return true;\n  }\n\n  if (data['age'] < 18 || data['age'] > 90) {\n    text.textContent = 'Age must be between 18 and 90.';\n\n    return true;\n  }\n\n  if (+data['salary'] <= 0 || data['salary'].trim() === '') {\n    text.textContent = 'Salary is required';\n\n    return true;\n  }\n}\n\nfunction applyChanges(e) {\n  if (e.target.classList.contains('cell-input')) {\n    const newText = e.target.value.trim();\n    const cell = e.target.parentNode;\n    let shouldBeReplaced = true;\n    const columnName = (e.target.getAttribute('type') === 'number'\n      && cell.parentNode.lastElementChild === cell)\n      ? 'salary' : 'age';\n\n    if (columnName === 'age' && (+newText < 18 || +newText > 90)) {\n      shouldBeReplaced = false;\n    }\n\n    if (newText === '' || +newText <= 0) {\n      shouldBeReplaced = false;\n    }\n\n    if (shouldBeReplaced && columnName === 'salary') {\n      cell.textContent = '$' + (+newText).toLocaleString();\n\n      return;\n    }\n\n    if (!shouldBeReplaced) {\n      cell.textContent = editedCell;\n\n      return;\n    }\n\n    cell.textContent = newText;\n  }\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","editedCell","activeLine","table","document","querySelector","captions","employees","form","createElement","submitBtn","currOrder","currColumnName","render","board","content","innerHTML","forEach","employee","row","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Object","entries","Symbol","iterator","next","done","_step_value","value","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","call","push","err","_unsupported_iterable_to_array","o","minLen","n","prototype","toString","slice","constructor","name","from","test","_non_iterable_rest","TypeError","key","data","column","textContent","salary","concat","toLocaleString","append","return","applyChanges","e","target","classList","contains","newText","trim","cell","parentNode","shouldBeReplaced","columnName","getAttribute","lastElementChild","children","el","Name","Position","Office","Age","Salary","replace","addEventListener","sortValue","sort","a","b","first","second","localeCompare","reverse","remove","add","inputNames","field","insertAdjacentHTML","toLowerCase","options","selectOptions","map","item","preventDefault","notification","notificationTitle","notificationBody","setAttribute","className","fromEntries","formData","FormData","text","reset","body","setTimeout","removeChild","editedCellType","isNaN","parseInt","search","firstChild","focus"],"version":3,"file":"index.d1b9ec3c.js.map"}